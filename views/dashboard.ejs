<!doctype html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.rtl.min.css"
        integrity="sha384-dpuaG1suU0eT09tx5plTaGMLBsfDLzUCCUXOY2j/LSvXYuG6Bqs43ALlhIqAJVRb" crossorigin="anonymous">

    <title></title>
</head>

<body>
    <script>
        window.onload = function () {
            const userEmail = localStorage.getItem('userEmail');
            const userName = localStorage.getItem('userName');
            if (!userEmail) {
                window.location.href = "/";
            }

            const heading = document.querySelector('h1');
            heading.textContent = `Hii ${userName}`;

        }
    </script>
    <div class="container">
        <h1>Hii</h1>
        <h2>Create a new revision</h2>
        <form id="revisionForm">
            <div class="mb-3">
                <label class="form-label">Pages Read</label>
                <input type="number" class="form-control" id="exampleInputPassword1" name="pagesRead">
            </div>
            <div class="mb-3">
                <label class="form-label">From Pages - To Pages</label>
                <input type="text" class="form-control" id="exampleInputPassword1" name="fromPageToPage">
            </div>
            <div class="mb-3">
                <select class="form-select" aria-label="Default select example" name="difficulty">
                    <option selected>Open this select menu</option>
                    <option value="1">Very Tough</option>
                    <option value="2">Tough</option>
                    <option value="3">Moderate</option>
                    <option value="4">Easy</option>
                    <option value="5">Too Easy</option>
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </form>
    </div>

    <div class="container mt-4">
        <h1>Your All Revisions</h1>
        <div id="revisionsContainer"></div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>

    <script>
        const form = document.getElementById('revisionForm');
        form.addEventListener('submit', async function (event) {
            event.preventDefault();

            const formData = new FormData(event.target);

            const data = {
                pagesRead: formData.get('pagesRead'),
                fromPageToPage: formData.get('fromPageToPage'),
                difficulty: formData.get('difficulty'),
                email: localStorage.getItem('userEmail'),
            };

            try {
                const response = await fetch('/submit-progress', {
                    method: 'POST',
                    headers: {
                        'Content-type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (response.ok) {
                    alert("Revision Saved Successfully");
                } else {
                    alert(`Error: ${result.message}`);
                }
            } catch (error) {
                alert("Some error occured, contact the developer.")
            }

        });
    </script>



    <script>
        (async function () {
            const email = localStorage.getItem('userEmail');
            const response = await fetch(`/get-revisions?email=${email}`, {
                method: 'GET',
                headers: {
                    'Content-type': 'application/json'
                }
            });

            const result = await response.json();

            if (response.ok) {
                const revisionsContainer = document.getElementById('revisionsContainer');
                result.forEach(revision => {
                    const revisionElement = document.createElement('div');
                    revisionElement.classList.add('revision-item', 'mb-3', 'p-3', 'border', 'rounded');
                    revisionElement.innerHTML = `
                    <p><strong>Pages Read:</strong> ${revision.pagesRead}</p>
                    <p><strong>From Pages - To Pages:</strong> ${revision.fromPageToPage}</p>
                    <p><strong>Difficulty:</strong> ${revision.difficulty}</p>
                    <button class="btn btn-danger delete-btn" token="${revision.token}">Delete</button>
                `;
                    revisionsContainer.appendChild(revisionElement);
                });

                document.querySelectorAll('.delete-btn').forEach(button => {
                    button.addEventListener('click', async function () {
                        const token = this.getAttribute('token');
                        try {
                            const deleteResponse = await fetch(`/delete-revision?id=${token}`, {
                                method: 'DELETE',
                                headers: {
                                    'Content-type': 'application/json'
                                }
                            });

                            if (deleteResponse.ok) {
                                alert("Revision deleted successfully.");
                                this.parentElement.remove();
                            } else {
                                const deleteResult = await deleteResponse.json();
                                alert(`Error: ${deleteResult.message}`);
                            }
                        } catch (error) {
                            alert("Some error occurred while deleting, contact the developer.");
                        }
                    });
                });
            } else {
                alert(`Error: ${result.message}`);
            }
        })();
    </script>


</body>

</html>